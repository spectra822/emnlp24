// Read input from standard input and split it into lines
var input = require('fs').readFileSync('/dev/stdin', 'utf8');
var Arr = (input.trim()).split("\n");

// Extract N and K from the first line
var NK = Arr.shift().split(" ").map(Number);
var N = NK[0];
var K = NK[1];

// Initialize the rabbit array to keep track of rabbits
var rabbit = [];
for (var i = 0; i < N; i++) rabbit[i] = true;

// Read the boat configurations
var boat = [];
for (var i = 0; i < K; i++) {
    var v = Arr.shift().split(" ").map(function(value) {
        return (value - 0) - 1;
    });
    v.shift();
    boat.push(v);
}

// Read the number of rabbit pairs
var R = Arr.shift() - 0;

// Read the pairs of rabbits that need to be checked
var PQ = [];
for (var i = 0; i < R; i++) {
    var v = Arr.shift().split(" ").map(function(value) {
        return (value - 0) - 1;
    });
    PQ.push(v);
}

// Check each boat configuration against each rabbit pair
boat.forEach(function(v) {
    PQ.forEach(function(V) {
        var a = v.indexOf(V[0]);
        var b = v.indexOf(V[1]);
        if (a !== -1 && b !== -1) {
            rabbit[V[0]] = false;
            rabbit[V[1]] = false;
        }
    });
});

// Count the number of rabbits that are not valid
var ans = 0;
rabbit.forEach(function(v) {
    if (!v) ans++;
});

// Output the result
console.log(ans);