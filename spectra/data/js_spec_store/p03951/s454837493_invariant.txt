// Segment 1: Reading and parsing input
// Precondition: The program is executed in an environment where '/dev/stdin' contains input following the format:
// - First line contains an integer N
// - Second line contains a string s of length N
// - Third line contains a string t of length N
// Postcondition: The variables _N, s, and t are initialized with the input values, and N is an integer parsed from _N
const [_N, s, t] = args.trim().split`\n`, N = _N | 0;

// Segment 2: Loop to find the overlap of strings s and t
// Precondition: The variables _N, s, t, and N are initialized, and s and t are strings of length N
// Postcondition: The loop iterates over possible start positions in s to check for overlap with t
S: for (let i = 0; i < N; i++) {
    for (let j = 0; i + j < N; j++) {
        if (s[i + j] !== t[j]) continue S;
    }
    // Segment 3: Returning the result if an overlap is found
    // Precondition: An overlap between s and t is found starting at index i
    // Postcondition: The program outputs i + N
    return i + N;
}

// Segment 4: Returning the result if no overlap is found
// Precondition: The loop has completed without finding any overlap between s and t
// Postcondition: The program outputs N + N
return N + N;
})(require('fs').readFileSync('/dev/stdin', 'utf8')));

// Input format:
// Line 1: An integer N
// Line 2: A string s of length N
// Line 3: A string t of length N

// Output format:
// A single integer representing the minimum length of the resulting string after overlapping s and t