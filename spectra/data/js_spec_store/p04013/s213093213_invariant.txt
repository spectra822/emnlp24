// Segment 1: Variable Initialization and Input Parsing
// Precondition: The function Main is called with a single string input in the format "N A\nx1 x2 x3 ... xn\n"
// Postcondition: N, A, and x are correctly parsed, and sum is calculated as the sum of elements in x.
function Main(input) {
    input = input.split("\n");
    var N = parseInt(input[0].split(" ")[0]);
    var A = parseInt(input[0].split(" ")[1]);
    var x = input[1].split(" ").map(i => parseInt(i));
    var sum = 0;
    for (var i = 0; i < N; i++) {
        sum += x[i];
    }

// Segment 2: Initialize DP Table
// Precondition: sum is calculated as the sum of elements in x, N is the number of elements in x.
// Postcondition: A 2D array 'map' of size (sum + 1) x (N + 1) is initialized with all elements set to 0.
    var map = new Array(sum + 1);
    for (var i = 0; i < sum + 1; i++) {
        var tmp = new Array(N + 1).fill(0);
        map[i] = tmp;
    }
    map[0][0] = 1;

// Segment 3: Dynamic Programming to Fill DP Table
// Precondition: A 2D array 'map' of size (sum + 1) x (N + 1) is initialized with all elements set to 0 except map[0][0] = 1.
// Postcondition: The DP table 'map' is filled based on the input array x.
    for (var k = 0; k < N; k++) {
        for (var i = N; i > 0; i--) {
            for (var j = sum + 1; j - x[k] >= 0; j--) {
                if (map[j - x[k]][i - 1] != 0) {
                    map[j][i] = map[j][i] + map[j - x[k]][i - 1];
                }
            }
        }
    }

// Segment 4: Calculate the Answer Based on DP Table
// Precondition: The DP table 'map' is filled based on the input array x.
// Postcondition: The variable 'ans' is calculated as the number of ways to select subsets of x that have an average value of A.
    var ans = 0;
    for (var i = 1; i <= N; i++) {
        if (i * A <= sum) {
            ans += map[i * A][i];
        }
    }

// Segment 5: Output the Result
// Precondition: The variable 'ans' is calculated.
// Postcondition: The value of 'ans' is printed to the console.
    console.log('%s', ans);
    return ans;
}

// Segment 6: Debugging Function
// Precondition: A button click triggers the debug function with a specific input number 'n'.
// Postcondition: The result of the function Main is compared with the expected output, and the result ("AC" or "WA") is displayed.
function debug(n) {
    var input = document.getElementById("input" + n).value;
    var ans = Main(input);
    var result = "WA";
    if (ans == document.getElementById("output" + n).value.split("\n")[0]) {
        result = "AC";
    }
    document.getElementById("result" + n).innerHTML = result;
}

// Segment 7: Main Function Call
// Precondition: The script is run in a Node.js environment with input provided via standard input.
// Postcondition: The Main function is executed with the input read from standard input.
Main(require("fs").readFileSync("/dev/stdin", "utf8"));
    4 8
    7 9 8 9
    5