// Segment 1: Reading input and initializing the array
// Precondition: The input file '/dev/stdin' exists and contains integers separated by newlines.
// Postcondition: `input` contains the entire input file as a string. `Arr` is an array of integers parsed from the input string. `L` is the first element of `Arr`, representing the number of test cases.
var input = require('fs').readFileSync('/dev/stdin', 'utf8');
var Arr = (input.trim()).split("\n").map(Number);
var L = Arr.shift(); // First element is the number of test cases

// Segment 2: Processing each test case
// Precondition: `L` is an integer representing the number of test cases. `Arr` is an array of integers where each integer is an initial value for a test case.
// Postcondition: For each test case, it prints the case number and the sequence of 10 numbers generated by the algorithm.
// Input format: The first integer is `L` (the number of test cases), followed by `L` integers representing the initial values for each test case.
// Output format: For each test case, it prints "Case X:" followed by 10 integers, each on a new line.
for (var i = 0; i < L; i++) {
    console.log("Case " + (i + 1) + ":");
    var v = Arr[i];

    // Segment 3: Generating and printing the sequence of numbers for the current test case
    // Precondition: `v` is an integer, the initial value for the current test case.
    // Postcondition: It prints 10 integers, each generated by taking the middle four digits of the square of the previous integer (padded with leading zeros if necessary).
    // Input format: The integer `v`, which is the initial value for the current test case.
    // Output format: 10 integers, each on a new line.
    for (var j = 0; j < 10; j++) {
        v = "000000" + (v * v); // Square the number and pad with leading zeros
        v = v.slice(-6); // Take the last 6 digits
        v = v.slice(0, 4); // Take the first 4 digits of those 6 digits
        v = parseInt(v, 10); // Convert to integer
        console.log(v);
    }
}